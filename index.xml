<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lawliet&#39;s Homepage</title>
    <link>https://complexwang.github,io/</link>
      <atom:link href="https://complexwang.github,io/index.xml" rel="self" type="application/rss+xml" />
    <description>Lawliet&#39;s Homepage</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Thu, 28 Jun 2018 00:00:00 +0100</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Lawliet&#39;s Homepage</title>
      <link>https://complexwang.github,io/</link>
    </image>
    
    <item>
      <title>What can computer graphics do？</title>
      <link>https://complexwang.github,io/talk/cadcg/</link>
      <pubDate>Mon, 15 Mar 2021 19:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/talk/cadcg/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Fast and High-accuracy Triangle Mesh Simplification Algorithm</title>
      <link>https://complexwang.github,io/project/simplification/</link>
      <pubDate>Fri, 15 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/simplification/</guid>
      <description></description>
    </item>
    
    <item>
      <title>My favourite links</title>
      <link>https://complexwang.github,io/project/favouritelinks/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/favouritelinks/</guid>
      <description>&lt;p&gt;I will collect some websites about computer graphics here in the near furture.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Efficient 3D Surface Thickening Algorithm</title>
      <link>https://complexwang.github,io/project/thicken/</link>
      <pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/thicken/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The Swiss Army Knife of 3D Nesting</title>
      <link>https://complexwang.github,io/project/3dnesting/</link>
      <pubDate>Thu, 10 Sep 2020 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/3dnesting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Why 3D Nesting Matters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Additive manufacturing (AM), also known as 3D printing, refers to a set of technologies that allow the production of highly complex parts in an incremental layer-by-layer material deposition process. Powder-based Additive manufacturing (AM) machines, Selective Laser Sintering (SLS), and Multi Jet Fusion are able to print multiple parts in a build volume at the same time.&lt;/p&gt;
&lt;p&gt;3D Nesting (a.k.a “Packing”) is the process by which a collection of 3D files are sorted, oriented and arranged in 3D space to minimize their combined bounding box volume. Efficient nesting of multiple parts can significantly reduce unit cost and cycle time in additive manufacturing (AM).&lt;/p&gt;
&lt;p&gt;For the above reason, we developed an advanced 3D nesting (3D packing) function in our software. Moreover, in the past two months, we have optimized this algorithm, which has greatly improved the nesting speed and density.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How It Works&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;VD&amp;rsquo;s Nesting algorithm is built to minimize the z-height of the batch, allows user to set part interval, margin to platform sides, limited platform height, parts rotation and so on.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Part interval&lt;/strong&gt;: In order to avoid fusing your parts together in the printing process, part interval between all of the components in your 3D file is required to be considered. Small part interval increases the risk of your parts being fused together while large part interval leads to more space needed resulting in waste of material and time.&lt;/p&gt;
&lt;p&gt;VD allows users to set part interval freely. An experienced engineer can weigh and select the most suitable part interval.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rotation setting&lt;/strong&gt;: The orientation of each part in the 3D printing platform has a great influence on the
final product surface quality. For example, rounded parts are frequently placed on the X and Y axes to avoid warpage.&lt;/p&gt;
&lt;p&gt;VD allows users to set Z-Rotation steps. It defines how many options you have when rotating the part along the z-axis. The more steps you have, the more options and the higher the density you will reach. VD also allows users to set whether to rotate parts around X-axis or Y-axis.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The test case and results&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We nested 100 identical glasses models in a 3D printing platform with a size of 600mm&lt;em&gt;600mm&lt;/em&gt;400mm. Each model has 125544 vertices and 251092 triangles. The maximal used platform height is 106.168mm. This experiment was run on a 3.00GHz Intel Core i7 PC with 16Gb RAM and it only took 8 seconds.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;front1200.png&#34; alt=&#34;front1200.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;iso1200.png&#34; alt=&#34;iso1200.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;top1200.png&#34; alt=&#34;top1200.png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Data processing flow for metal dental printing</title>
      <link>https://complexwang.github,io/talk/dentalprinting/</link>
      <pubDate>Wed, 08 Jul 2020 14:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/talk/dentalprinting/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Introduction to SLS 3D Printing Software</title>
      <link>https://complexwang.github,io/talk/sls/</link>
      <pubDate>Mon, 11 May 2020 14:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/talk/sls/</guid>
      <description></description>
    </item>
    
    <item>
      <title>An In-Depth Look at Model Repairing</title>
      <link>https://complexwang.github,io/project/autorepair/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/autorepair/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Why model repairing matters&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Failed prints are a common issue when you finally come to print the 3D models you’ve
created. One of the main reasons why printing failed is that many 3D models have defects that make them unsuitable for printing. But where do these defects come from?&lt;/p&gt;
&lt;p&gt;To answer this question, we need to that know that the vast majority of today’s 3D models originate from one of two common data sources: from digitization of real-world objects or phenomena, or from tessellation of virtual, synthetic data typically produced in a computer [1].&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Digitized models&lt;/strong&gt;: Digitizing a real-world 3D object amounts to capturing several views of the object which are eventually aligned and merged into a single model .While this is sufficient for mere visualization purposes, at this stage polygon meshes may contain degenerate elements, overlapping or self-intersecting parts, surface holes, and a number of other flaws.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Synthetic models&lt;/strong&gt;: If an engineer want to print a CAD model, tessellation algorithms need to be used for converting CAD files to triangle meshes. Unfortunately, tessellation algorithms typically create a separate mesh per patch and, though each such mesh might respect all the requirements, neighboring patches are often not continuously and consistently connected and, in some cases, they overlap or intersect.&lt;/p&gt;
&lt;p&gt;Besides, we need to mention that some models may visually look meaningful but have lots of defects inside them and it is very hard to find with eyes.&lt;/p&gt;
&lt;p&gt;According to the above reasons, we need to develop a model repair algorithm that can handle all these kinds of defects.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How it works&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Based on the above analysis, it is not hard to find that there are so many different kinds of defects. Adjusting STL files manually or fix all these defects one by one is a time-consuming
process. Besides, users may not have the necessary skills to handle all these problems by
themselves. So, we strongly believed that automatic methods are even more important. In view of this, we optimized our automatic repair workflow recently. In the remainder of this article, we will talk about the tests we have done and show the test results to the readers.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The test case and results&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Thingi10k [2] is a new dataset of 10,000 models collected from an online 3D printing
model-sharing database. This dataset represents a more concise summary of real-world models used for 3D printing compared to existing datasets. We downloaded 4447 not solid models which have all kinds of defects (e.g., self-intersections, holes, degeneracies, noisy shells, not orientable, non-manifoldness, etc.) through the online query interface. We tested our algorithm over these 4447 not solid models in Thingi10k dataset. &lt;strong&gt;The results showed that 99% of the 4447 not solid models can be successfully fixed by our automatic repair algorithm&lt;/strong&gt;. The following figures shows some examples of the automatic repair algorithm.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;252683before.jpg&#34; alt=&#34;252683.stl before repairing&#34;&gt;&lt;img src=&#34;252683after.jpg&#34; alt=&#34;252683.stl after repairing&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;66376before.jpg&#34; alt=&#34;66376.stl before repairing&#34;&gt;&lt;img src=&#34;66376after.jpg&#34; alt=&#34;66376.stl after repairing&#34;&gt;&lt;/p&gt;
&lt;p&gt;Beyond the Thingi10k dataset, we also obtained quite a large number of teeth models and CAD models for 3D printing from our customers. The following figures shows an example of the automatic repair algorithm tested on teeth.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;teethbefore.jpg&#34; alt=&#34;teet.stl before repairing&#34;&gt;&lt;img src=&#34;teethafter.jpg&#34; alt=&#34;teeth.stl after repairing&#34;&gt;&lt;/p&gt;
&lt;p&gt;We confess here that our automatic repair algorithm can not repair all kinds of models.
For very large 3D models, automatic repair may fail because of your computer’s memory limitation. For 3D models with large holes, our automatic repair algorithm may cause distortion. More generally, model repair problem is ill-posed, sometimes the only right answer is only in the designer’s mind and we could not guess.
We welcome you to apply to try our software through our website. If you find some 3D models that our software can’t fix, you could send them to us by email. All data will be kept confidential and won&amp;rsquo;t be commercial used. We will try our best to fix them and send to you back.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Acknowledgments&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We thank Thingi10K for sharing the 3D models. We are grateful to EPlus, SHINING 3D，HeyGears for sharing the teeth models, TPM3D and RayShape for other kinds of 3D models.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;References&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;[1] Marco Attene, Marcel Campen, and Leif Kobbelt. 2013. Polygon Mesh Repairing: An Application Perspective. ACM Comput. Surv. 45, 2, Article 15 (March 2013)&lt;/p&gt;
&lt;p&gt;[2] Qingnan Zhou and Alec Jacobson. 2016. Thingi10K: A Dataset of 10,000 3D-Printing
Models, &lt;a href=&#34;https://ten-thousand-models.appspot.com&#34;&gt;https://ten-thousand-models.appspot.com&lt;/a&gt;. Technical Report. New York University.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Intelligent 2D nesting algorithm</title>
      <link>https://complexwang.github,io/project/2dnesting/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/2dnesting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Additive manufacturing&lt;/strong&gt; (AM) is poised to bring about a revolution in the way products are designed, manufactured, and distributed to end users. Due to the layer-based processing characteristic, significant savings in cost and time can be achieved in AM by manufacturing multiple parts in a single setup to achieve efficient machine volume utilization. Intuitively, to improve the machine utilization, more parts should be placed as compactly as possible to harness the build volume so as to reduce the total build time and cost for per machine run. However, doing the part placement manually in a graphic environment is time-consuming, and it becomes more complicated when placing a batch of parts with a large quantity and very complex geometries. Furthermore, it is very difficult or even impossible for an operator to find an optimal part placement solution manually when placing a large number of parts models. For the above-mentioned reasons，we  developed this 2D nesting function in VD software.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2dnestgui.jpg&#34; alt=&#34;2D nesting GUI&#34;&gt;&lt;/p&gt;
&lt;p&gt;For 2D nesting, you can adjust:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Accuracy&lt;/strong&gt;: the higher the accuracy, the higher is the packing density&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Part interval&lt;/strong&gt;: minimum distance between parts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Margin to sides&lt;/strong&gt;: distance to platform border (XY)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Distance to platform&lt;/strong&gt;: the minimum Z value of parts&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Rotation setting&lt;/strong&gt;: defines how many options you have when rotating the part along the z-axis. The more steps you have, the more options and the higher the density you will reach.
Besides these useful settings, we have some more advanced functions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Selection&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When you want to nest all the parts, just click All parts, all parts will be automatically nested for you.&lt;/p&gt;
&lt;p&gt;When you want to nest only selected parts, just click Selected parts.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2dnestselected.jpg&#34; alt=&#34;2D nesting only selected models&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Whenever you want to place specific parts manually and let VD nest other parts around those, you can select these additional parts and click Keep unselected parts unmoved. With this option, the unselected parts won’t be moved anymore.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;2dnest-unselected-unmoved.jpg&#34; alt=&#34;2D nesting keep unselected parts unmoved&#34;&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;If you want to move unselected parts out of platform, just click Move unselected parts out of platform. All the parts unselected will be moved outside platform, only the selected be nested on the platform.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;2dnesting-unselected-out.jpg&#34; alt=&#34;2D nesting keep unselected parts out of platform&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Align parts’ main direction to X-axis&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This function is only useful for dental 3D printing. By clicking Align parts’ main direction to X-axis, all the main directions of teeth models will align to X-axis.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2dnesting-align-parts.jpg&#34; alt=&#34;2D nesting align parts&amp;rsquo; main direction to X-axis&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;2D nesting for round platform&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;VD has a special function that is nesting parts for round platform which can been hardly seen in other 3D printing software.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2dnesting-round-alignx.png&#34; alt=&#34;with align parts&amp;rsquo; main direction to X-axis&#34;&gt;
&lt;img src=&#34;featured.jpg&#34; alt=&#34;without align parts&amp;rsquo; main direction to X-axis&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Privacy Policy</title>
      <link>https://complexwang.github,io/privacy/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>https://complexwang.github,io/privacy/</guid>
      <description>&lt;p&gt;Add your privacy policy here and set &lt;code&gt;draft: false&lt;/code&gt; to publish it. Otherwise, delete this file if you don&amp;rsquo;t need it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Terms</title>
      <link>https://complexwang.github,io/terms/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0100</pubDate>
      <guid>https://complexwang.github,io/terms/</guid>
      <description>&lt;p&gt;Add your terms here and set &lt;code&gt;draft: false&lt;/code&gt; to publish it. Otherwise, delete this file if you don&amp;rsquo;t need it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Visualization of the model cross-section using OpenGL</title>
      <link>https://complexwang.github,io/project/visualization/</link>
      <pubDate>Sun, 29 Oct 2017 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/visualization/</guid>
      <description>&lt;p&gt;Clipping visualized 3D models with user-defined clipping planes is one of basic OpenGL features that allows the user to look inside the models.&lt;/p&gt;
&lt;p&gt;However, in some cases it is more interesting to investigate the cross-section shape rather than the model&amp;rsquo;s internals. For this purpose, the cross-section should be visualized in shading using some distinctive visual attributes (specific color, hatching).&lt;/p&gt;
&lt;p&gt;Solving this task geometrically might be a heavy work with large complicated CAD models. If visualization of the cross-section is the only goal, this task can be solved efficiently using OpenGL-based capping algorithm.&lt;/p&gt;
&lt;p&gt;A gif showing sample results of my capping algorithm:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;frog.gif&#34; alt=&#34;Cross Section&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Isotropic 3D Model Remeshing Algorithm</title>
      <link>https://complexwang.github,io/project/remesh/</link>
      <pubDate>Sat, 25 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/remesh/</guid>
      <description>&lt;p&gt;I will write later&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Fast Intersection-free 3D Model Hollowing Algorithm</title>
      <link>https://complexwang.github,io/project/hollow/</link>
      <pubDate>Sat, 29 Oct 2016 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/hollow/</guid>
      <description>&lt;p&gt;The pricing for most 3D printing materials is volume-based: the less material you use, the less it will cost you. For some materials, hollowing your object will also avoid deformation or discoloration.&lt;/p&gt;
&lt;p&gt;In 3D printing, wall thickness refers to the distance between one surface of your model and its opposite sheer surface. Wall thickness is defined as the minimum thickness your model should have at any time. It’s important that every surface of your 3D model has been assigned a wall thickness.&lt;/p&gt;
&lt;p&gt;When using your 3D modeling software it&amp;rsquo;s possible to design a surface without a wall thickness. However, 3D printers need the information about how thick you intend the wall of your object to be. Many printing problems can be traced back to wall thickness issues. The minimum printable wall thickness primarily depends on the material you choose. Other factors such as the alignment, size, and overall design of your 3D model, can also influence the recommended minimum wall thickness.&lt;/p&gt;
&lt;p&gt;Pushing the wall thickness to the minimum might seem like a way to save money. However, making walls too thin can make a model too fragile and might cause parts of it to break off.&lt;/p&gt;
&lt;p&gt;The image above shows sample result of my hollowing algorithm.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
