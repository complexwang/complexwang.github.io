<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Others | Lawliet&#39;s Homepage</title>
    <link>https://complexwang.github,io/tags/others/</link>
      <atom:link href="https://complexwang.github,io/tags/others/index.xml" rel="self" type="application/rss+xml" />
    <description>Others</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sun, 06 Mar 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Others</title>
      <link>https://complexwang.github,io/tags/others/</link>
    </image>
    
    <item>
      <title>Some Thoughts</title>
      <link>https://complexwang.github,io/project/thoughts/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/thoughts/</guid>
      <description>&lt;p&gt;&lt;font size=4&gt; &lt;font color=blue&gt; &lt;em&gt;莫言说他43天写完生死疲劳，刚开始觉得不可思议。毕竟这么厉害的一本书，只用一个半月？后来我想通了，写作有时候和写算法一样，都是短时间内的灵感快速爆发，一气呵成。当然这并不意味着写作和写算法都很容易。
就像莫言说的，“虽然我只用了43天写完了这本书，但是我却积累了43年 ”。&lt;/em&gt;  &lt;/font&gt;&lt;br/&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=4&gt; &lt;font color=purple&gt; &lt;em&gt;我写的很多算法都是在晚上洗澡的时候想通的。可是我家人一直嫌弃我洗澡时间长。但是我也没有浪费水，因为我把脚放在盆里，洗完澡，就把洗澡水留着，冲马桶用。&lt;/em&gt;  &lt;/font&gt;&lt;br/&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=4&gt; &lt;font color=red&gt; &lt;em&gt;想起昨天的家人的一段对话：我正在房间对着电脑办公.&amp;ldquo;王松又在搞工作吗？&amp;ldquo;我妈说“他哪是在搞工作，是工作在搞他，他哪搞的定工作”。&lt;/em&gt;  &lt;/font&gt;&lt;br/&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=4&gt; &lt;font color=green&gt; &lt;em&gt;计算机图形学领域有很多著名的历史人物，他们都为计算机图形学作出重要的贡献，写出很厉害的算法，成为业界标准，然后被写进教科书。而他们之所以著名，是因为在他们发明这些算法之前，这些问题是超级难的问题，一直悬而未决，他们用这些算法扭转乾坤。现在，我们花费几节课把他们这些经典算法学会。 这就说明一个问题，这些超级难的问题的解决方案并没有太难（我们几节课学会），并没有特别高深的数学公式之类。所以我在想如何解决新问题的时候，一直都先问自己，这个问题是不是就有一个 简单直接 直插心脏的算法？&lt;/em&gt;  &lt;/font&gt;&lt;br/&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=4&gt; &lt;font color=black&gt; &lt;em&gt;一个算法问题在没找到解决方案之前，无时无刻不在挂念着，想着。可在找到解决方案那一刻，就会瞬间对他失去兴趣，看都不想看，觉得无聊。&amp;mdash;一个渣男算法工程师的内心独白。&lt;/em&gt;  &lt;/font&gt;&lt;br/&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font size=4&gt; &lt;font color=purple&gt; &lt;em&gt;学而不思则罔，思而不学则殆。之前只知道表意，最近和各种人接触，深有体会。和一些硕士博士聊天，发现他们每天都累的不轻，争分夺秒学习各种课程。但是却从来没有停下来好好反思反思并且把已学的东西实践一下。这样当然就会迷惑，最终导致没有真正理解。这就是学而不思则罔；和一些企业的朋友聊天，他们无时无刻不在思考如何解决各种算法问题，但是从来没想过多搜多看多学。最后也解决不了问题，还累的不轻。这就是思而不学则殆。&lt;/em&gt;  &lt;/font&gt;&lt;br/&gt;&lt;/font&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Favourite Links</title>
      <link>https://complexwang.github,io/project/favouritelinks/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0000</pubDate>
      <guid>https://complexwang.github,io/project/favouritelinks/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Collection&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;http://kesen.realtimerendering.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;font color=purple&gt;&lt;em&gt;Ke-Sen Huang&amp;rsquo;s Home Page&lt;/em&gt;&lt;/font&gt;&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;http://csrankings.org/#/index?graph&amp;amp;world/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;font color=purple&gt;&lt;em&gt;CSRankings: Computer Science Rankings&lt;/em&gt;&lt;/font&gt;&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;http://www.dgp.toronto.edu/~rms/links.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;font color=purple&gt;&lt;em&gt;Computer Graphics Research Software&lt;/em&gt;&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- **Algorithm librarys** --&gt;
&lt;!-- [&lt;font color=purple&gt;*FCPW: Fastest Closest Points in the West*&lt;/font&gt;](https://github.com/rohan-sawhney/fcpw/) --&gt;
&lt;!-- [&lt;font color=purple&gt;*Probabilistic Quadrics*&lt;/font&gt;](https://github.com/Philip-Trettner/probabilistic-quadrics/) --&gt;
&lt;!-- [&lt;font color=purple&gt;*Fast and Robust Mesh Arrangements*&lt;/font&gt;](https://github.com/gcherchi/FastAndRobustMeshArrangements/) --&gt;
&lt;!-- [&lt;font color=purple&gt;*Fast Winding Numbers for Soups*&lt;/font&gt;](https://github.com/libigl/libigl/)  --&gt;
&lt;!-- [&lt;font color=purple&gt;*ImatiSTL*&lt;/font&gt;](https://github.com/qnzhou/ImatiSTL/)   [&lt;font color=purple&gt;*Meshfix*&lt;/font&gt;](https://github.com/MarcoAttene/MeshFix-V2.1/) --&gt;
&lt;!-- [&lt;font color=purple&gt;*Indirect Predicates for Geometric Constructions*&lt;/font&gt;](https://github.com/MarcoAttene/Indirect_Predicates/)--&gt;
&lt;p&gt;&lt;strong&gt;Courses&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;font color=purple&gt;&lt;em&gt;Essence of Linear Algebra&lt;/em&gt;&lt;/font&gt;&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;http://15462.courses.cs.cmu.edu/fall2020/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;font color=purple&gt;&lt;em&gt;Keenan Crane Computer Graphics&lt;/em&gt;&lt;/font&gt;&lt;/a&gt;&lt;br&gt;

&lt;a href=&#34;https://brickisland.net/DDGSpring2021/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;font color=purple&gt;&lt;em&gt;keenan Crane Discrete Differential Geometry&lt;/em&gt;&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Materials&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.mattkeeter.com/projects/qef//&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;font color=purple&gt;&lt;em&gt;Matt Keeter // QEF Explainer&lt;/em&gt;&lt;/font&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;font color=gray size=4&gt;I have a habit of looking up various algorithm codes, study materials and courses on the Internet every once in a while. But when I actually need to use them in my work, I often forget about their existence. As far as I&amp;rsquo;m concerned, one guideline for writing algorithms efficiently is to avoid rebuilding the wheel. First, rebuilding the wheel will cost you a lot of time, and second, the wheel you build is not necessarily as good as someone else&amp;rsquo;s open source.For these reasons, I will occasionally update some material in this page that I find interesting and useful.&lt;/font&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
